/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/avatar.glb
*/

import { useGLTF } from '@react-three/drei'
import { useGraph } from '@react-three/fiber'
import React from 'react'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { scene } = useGLTF('/avatar.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Hips} />
      <skinnedMesh name="mesh_0" geometry={nodes.mesh_0.geometry} material={materials.Wolf3D_Avatar} skeleton={nodes.mesh_0.skeleton} morphTargetDictionary={nodes.mesh_0.morphTargetDictionary} morphTargetInfluences={nodes.mesh_0.morphTargetInfluences} position={[-0.541, -0.037, -0.172]} scale={0} />
      <skinnedMesh geometry={nodes.mesh_1.geometry} material={materials.Wolf3D_Avatar_Transparent} skeleton={nodes.mesh_1.skeleton} position={[-0.541, -0.037, -0.172]} scale={0} />
    </group>
  )
}

useGLTF.preload('/avatar.glb')
